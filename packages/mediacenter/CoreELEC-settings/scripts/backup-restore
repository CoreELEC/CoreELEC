#!/bin/sh
################################################################################
#      This file is part of OpenELEC - http://www.openelec.tv
#      Copyright (C) 2009-2014 Stephan Raue (stephan@openelec.tv)
#
#  OpenELEC is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  OpenELEC is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with OpenELEC.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

. /usr/lib/coreelec/functions

# Get NAME, which is DISTRONAME, ie. CoreELEC
. /etc/os-release

hidecursor

BACKUP_FILE=`ls -1 /storage/.restore/??????????????.tar 2>/dev/null | tail -1`

if [ -f "$BACKUP_FILE" ] ; then
  echo "RESTORE IN PROGRESS"
  echo ""
  echo "Please do not reboot or turn off your ${NAME} device!"
  echo ""

  StartProgress spinner "Checking backup file... "
    tar tf $BACKUP_FILE &>/dev/null
    ret=$?

  if [ $ret -eq 0 ] ; then
    StopProgress "OK"

    echo
    echo "This may take some time to complete, please be patient."
    echo

    StartProgress spinner "Restoring... "
      rm -rf /storage/.kodi &>/dev/null
      rm -rf /storage/.cache &>/dev/null
      rm -rf /storage/.config &>/dev/null
      tar xf $BACKUP_FILE -C / &>/dev/null
      rm -f $BACKUP_FILE &>/dev/null
      sync
      StopProgress "done!"

    echo
    StartProgress countdown "Rebooting in 5s... " 5 "NOW"
  else
    StopProgress "FAILED"

    echo
    echo "Backup file is not valid, or corrupt."

    echo
    StartProgress spinner "Removing file to allow normal restart... "
      rm -f $BACKUP_FILE &>/dev/null
      sync
      StopProgress "done"

    echo
    StartProgress countdown "Rebooting in 30s... " 30 "NOW"
  fi
fi

sync
reboot -f
