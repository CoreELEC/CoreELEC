From 8f04173cefb4ba125bccf6bf48eebc4a77d627bf Mon Sep 17 00:00:00 2001
From: Arthur Liberman <arthur_liberman@hotmail.com>
Date: Mon, 5 Nov 2018 23:28:18 +0200
Subject: [PATCH] Add HasArchive and IsPlayable ListItem APIs

---
 addons/skin.estouchy/media/epg_archive.png      | Bin 0 -> 416 bytes
 addons/skin.estouchy/xml/ViewsPVR.xml           |  16 ++++++++++++++++
 .../media/icons/pvr/PVR-HasArchive.png          | Bin 0 -> 738 bytes
 .../skin.estuary/media/windows/pvr/archive.png  | Bin 0 -> 417 bytes
 addons/skin.estuary/xml/Variables.xml           |   3 +++
 xbmc/GUIInfoManager.cpp                         |  12 ++++++++++++
 .../kodi-addon-dev-kit/include/kodi/versions.h  |   4 ++--
 .../include/kodi/xbmc_pvr_types.h               |   1 +
 xbmc/guilib/guiinfo/GUIInfoLabels.h             |   2 ++
 xbmc/interfaces/json-rpc/schema/types.json      |  10 ++++++----
 xbmc/interfaces/json-rpc/schema/version.txt     |   2 +-
 xbmc/pvr/PVRGUIInfo.cpp                         |  14 ++++++++++++++
 xbmc/pvr/channels/PVRChannel.cpp                |  13 ++++++++++++-
 xbmc/pvr/channels/PVRChannel.h                  |   8 +++++++-
 14 files changed, 76 insertions(+), 9 deletions(-)
 create mode 100644 addons/skin.estouchy/media/epg_archive.png
 create mode 100644 addons/skin.estuary/media/icons/pvr/PVR-HasArchive.png
 create mode 100644 addons/skin.estuary/media/windows/pvr/archive.png

diff --git a/addons/skin.estouchy/media/epg_archive.png b/addons/skin.estouchy/media/epg_archive.png
new file mode 100644
index 0000000000000000000000000000000000000000..bf02128d673bf728f735e00ced4a64bc279c23f2
GIT binary patch
literal 416
zcmV;R0bl-!P)<h;3K|Lk000e1NJLTq0015U0015c1^@s6J20-I00001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj532;bRa{vGi!vFvd!vV){sAK>D02y>eSaefwW^{L9
za%BK;VQFr3E^cLXAT%y8E;2FkAZe8V009t5L_t(YOYN7j4TCTcMWIjOAyUvY4U<qX
zMmi)`$uyaOGEMS-a#kF2A`aN+CSQ6oaOe9%;KNjFI-HMwbf5tpn83Jz*BE1t3+HYY
z3Jl-^uHg0s<}i1V>Awq;TQCF7AO_BDrQEuZNNUgnt=JY=i#5eXktCdeR$vdTS&Pl5
z5KMWeOM0<+7Xo~y+Juz6o;gnZxaUQRWez=gz$K$4=HR*1aKPrkwWlTJfL@Nq>^3pY
zAr<s$Xv|ipCFG=|G5f3*%*jM!HhC?WlksnC#lyJR%T;VS6>A`6TBh{tA|DAq+J6=)
zoY-yzLLp$k^`Q_fw%POMw%glKNVMC~Yr<sPUl<An{FwNst*Y*-ICW^h#_pg10000<
KMNUMnLSTZKCaJyv

literal 0
HcmV?d00001

diff --git a/addons/skin.estouchy/xml/ViewsPVR.xml b/addons/skin.estouchy/xml/ViewsPVR.xml
index a9290088c5..4b13e86584 100644
--- a/addons/skin.estouchy/xml/ViewsPVR.xml
+++ b/addons/skin.estouchy/xml/ViewsPVR.xml
@@ -324,6 +324,14 @@
 					<texture>epg_schedule.png</texture>
 					<visible>ListItem.HasTimer</visible>
 				</control>
+				<control type="image">
+					<posx>5</posx>
+					<posy>45</posy>
+					<width>20</width>
+					<height>20</height>
+					<texture>epg_archive.png</texture>
+					<visible>![ListItem.IsRecording | ListItem.HasTimer] + ListItem.IsPlayable</visible>
+				</control>
 			</itemlayout>
 			<focusedlayout width="40" height="65">
 				<control type="image" id="2">
@@ -370,6 +378,14 @@
 					<texture>epg_schedule.png</texture>
 					<visible>ListItem.HasTimer</visible>
 				</control>
+				<control type="image">
+					<posx>7</posx>
+					<posy>44</posy>
+					<width>15</width>
+					<height>15</height>
+					<texture>epg_archive.png</texture>
+					<visible>![ListItem.IsRecording | ListItem.HasTimer] + ListItem.IsPlayable</visible>
+				</control>
 			</focusedlayout>
 		</control>
 	</include>
diff --git a/addons/skin.estuary/media/icons/pvr/PVR-HasArchive.png b/addons/skin.estuary/media/icons/pvr/PVR-HasArchive.png
new file mode 100644
index 0000000000000000000000000000000000000000..1eebcf8a711360a0da3d934d13be2b6191dd699f
GIT binary patch
literal 738
zcmV<80v-K{P)<h;3K|Lk000e1NJLTq001BW001Be1^@s6b9#F800001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj532;bRa{vGi!vFvd!vV){sAK>D02y>eSaefwW^{L9
za%BK;VQFr3E^cLXAT%y8E;2FkAZe8V00L4;L_t(oN9~s}Z_`i|g^eh&lOQo6h(u$@
zDGSVWWr3f77`n7erAllpY-L2Sl>Yz=FjS(V1wR|g+6jr3s#3>p%~B}|<-69M%yaaT
z*AAc_>By06pL^eV_ucCR7x*{vwKErdx*2kfO1`_%fS2{|IpH+D6mEBuC`*=_ruVXy
zr<<)J-Gw>7-$Z%xEHv@MAnRPyH_i}WI=5RUT_@0wcF`YQEf!9zZ0G&o+&^ySy^kca
z9Q?f1(6{}7;3N2r07F~gD$7JnI*3g2x?#F^RAx3Hw2Z~SMAQ~+5_xAt;#+LjqRLGN
zSvi*O+r(X|ZhW9Fx+?1k_FQeBdgWE3F-Ge}d0L!6wPX7_FFNhH3(-4>isZgVm<%~;
zQtdV&AELS8<N}#4)g3h-;^>|%PQ%oI4oB6#vI+PS2adulexQ+RKzrrEO`Cu(ao|Lb
zwMMD|d&EP#HUVFjr@{1|XrvlQ0(n~41bj&Xqh{7y(?~U7s^P#}n}9D#V89@ItdVNK
zNR_F^!`=<3N;D6h+OmvPw&B<&;zPRO4n=-l!%P74oJ_aQ(gn1JOvk6rA1z@XuTTpE
zo7gPG(eL3-yrA+9pcrMIleu?CL}L&Z@v6)iRd>Uc?fJVh&waK+S~?ofWkD)C9XPl5
zu<t!djBNoXQC40Cmk(Gk@G&9tTt=!bP?ZE8mV2II`>ZSf3v@`C=Ll~QV2|q&*Apxr
zi_NlHc-S`m&r<CaaewMPcLIsXNR_E3gGG8f?yO0Nn=|u^<vBn1{|6WNzYqj}00mQT
UGV1g6rT_o{07*qoM6N<$f|~b7(EtDd

literal 0
HcmV?d00001

diff --git a/addons/skin.estuary/media/windows/pvr/archive.png b/addons/skin.estuary/media/windows/pvr/archive.png
new file mode 100644
index 0000000000000000000000000000000000000000..a832a88821aa444b463fd28376eb29b7ee4cf1ce
GIT binary patch
literal 417
zcmV;S0bc%zP)<h;3K|Lk000e1NJLTq001Ze001Zm1^@s6jQ+T700001b5ch_0Itp)
z=>Px#1ZP1_K>z@;j|==^1poj532;bRa{vGi!vFvd!vV){sAK>D02y>eSaefwW^{L9
za%BK;VQFr3E^cLXAT%y8E;2FkAZe8V009w6L_t(oN9~tE4uUWgL^*(aF2IUC3lD-v
z5EH$e7jU6>apNKMP4Y<yDG6W;UHq3!Op(qswf(Jy<2a7v?9bs*m8eDyI@+h&rM<Eb
z44^`1bVqOW9Y}3G*Y}lm*$zTm^g_cyP3ehR>zW?IuIOXobEWrhW|0m;G;>P_*Gv7<
z%_Qbpb8~;zDXD*&HHonnd?<9OI<t%irYa@cm7&0;l26<cgrVx%xRk7wd}_0f1BNQT
zp|G`T%sLJj>Vyadt<}-2<A7oIGnoAv%zGCLOuIqIKf0J@Trkf2BoUbBdlvT)lJ9M%
zhp;90LA`gfuG>MV)}%I$cICJPsjcVx+^B~zfIR<`IF92usVRydLMd<e!5R#|00000
LNkvXXu0mjfn{lme

literal 0
HcmV?d00001

diff --git a/addons/skin.estuary/xml/Variables.xml b/addons/skin.estuary/xml/Variables.xml
index ea11f80497..b5824cea9b 100644
--- a/addons/skin.estuary/xml/Variables.xml
+++ b/addons/skin.estuary/xml/Variables.xml
@@ -3,6 +3,7 @@
 	<variable name="PVRStatusImageVar">
 		<value condition="ListItem.IsRecording">windows/pvr/record.png</value>
 		<value condition="ListItem.HasTimer | ListItem.HasTimerSchedule">windows/pvr/timer.png</value>
+		<value condition="ListItem.HasArchive">windows/pvr/archive.png</value>
 	</variable>
 	<variable name="AutoCompletionContentVar">
 		<value condition="System.HasAddon(plugin.program.autocompletion) + !System.HasHiddenInput">plugin://plugin.program.autocompletion?info=autocomplete&amp;&amp;id=$INFO[Control.GetLabel(312).index(1)]&amp;&amp;limit=9</value>
@@ -331,6 +332,7 @@
 		<value condition="ListItem.IsCollection">overlays/set.png</value>
 		<value condition="ListItem.IsPlaying">overlays/watched/OverlayPlaying-List.png</value>
 		<value condition="ListItem.IsResumable">overlays/watched/resume.png</value>
+		<value condition="ListItem.HasArchive">windows/pvr/archive.png</value>
 		<value condition="Integer.IsGreater(ListItem.Playcount,0)">$INFO[ListItem.Overlay]</value>
 	</variable>
 	<!-- Breadcrumbs -->
@@ -422,6 +424,7 @@
 		<value condition="ListItem.HasTimer + !ListItem.TimerIsActive">icons/pvr/PVR-HasTimerDisabled.png</value>
 		<value condition="ListItem.HasTimerSchedule">icons/pvr/PVR-HasTimerSchedule.png</value>
 		<value condition="ListItem.HasTimer">icons/pvr/PVR-HasTimer.png</value>
+		<value condition="ListItem.IsPlayable">icons/pvr/PVR-HasArchive.png</value>
 	</variable>
 	<variable name="SeasonEpisodeLabel">
 		<value condition="String.IsEmpty(ListItem.EpisodeName)">$INFO[ListItem.Season,S]$INFO[ListItem.Episode,E]</value>
diff --git a/xbmc/GUIInfoManager.cpp b/xbmc/GUIInfoManager.cpp
index 7b0c2dfc33..17344171e0 100644
--- a/xbmc/GUIInfoManager.cpp
+++ b/xbmc/GUIInfoManager.cpp
@@ -2595,6 +2595,16 @@ const infomap container_str[]  = {{ "property",         CONTAINER_PROPERTY },
 ///                  _boolean_,
 ///     Returns true when the selected programme is being recorded (PVR)
 ///   }
+///   \table_row3{   <b>`ListItem.IsPlayable`</b>,
+///                  \anchor ListItem_IsPlayable
+///                  _boolean_,
+///     Returns true when the selected programme can be played (PVR)
+///   }
+///   \table_row3{   <b>`ListItem.HasArchive`</b>,
+///                  \anchor ListItem_HasArchive
+///                  _boolean_,
+///     Returns true when the selected channel has a server-side back buffer (PVR)
+///   }
 ///   \table_row3{   <b>`ListItem.IsEncrypted`</b>,
 ///                  \anchor ListItem_IsEncrypted
 ///                  _boolean_,
@@ -3944,6 +3954,8 @@ const infomap listitem_labels[]= {{ "thumb",            LISTITEM_THUMB },
                                   { "hastimerschedule", LISTITEM_HASTIMERSCHEDULE },
                                   { "hasrecording",     LISTITEM_HASRECORDING },
                                   { "isrecording",      LISTITEM_ISRECORDING },
+                                  { "isplayable",       LISTITEM_ISPLAYABLE },
+                                  { "hasarchive",       LISTITEM_HASARCHIVE },
                                   { "inprogress",       LISTITEM_INPROGRESS },
                                   { "isencrypted",      LISTITEM_ISENCRYPTED },
                                   { "progress",         LISTITEM_PROGRESS },
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
index 1c706514ef..2b691b990e 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/versions.h
@@ -98,8 +98,8 @@
 #define ADDON_INSTANCE_VERSION_PERIPHERAL_DEPENDS     "addon-instance/Peripheral.h" \
                                                       "addon-instance/PeripheralUtils.h"
 
-#define ADDON_INSTANCE_VERSION_PVR                    "5.10.3"
-#define ADDON_INSTANCE_VERSION_PVR_MIN                "5.10.0"
+#define ADDON_INSTANCE_VERSION_PVR                    "5.10.4"
+#define ADDON_INSTANCE_VERSION_PVR_MIN                "5.10.4"
 #define ADDON_INSTANCE_VERSION_PVR_XML_ID             "kodi.binary.instance.pvr"
 #define ADDON_INSTANCE_VERSION_PVR_DEPENDS            "xbmc_pvr_dll.h" \
                                                       "xbmc_pvr_types.h" \
diff --git a/xbmc/addons/kodi-addon-dev-kit/include/kodi/xbmc_pvr_types.h b/xbmc/addons/kodi-addon-dev-kit/include/kodi/xbmc_pvr_types.h
index f1562b64dc..bd2c149154 100644
--- a/xbmc/addons/kodi-addon-dev-kit/include/kodi/xbmc_pvr_types.h
+++ b/xbmc/addons/kodi-addon-dev-kit/include/kodi/xbmc_pvr_types.h
@@ -402,6 +402,7 @@ extern "C" {
     unsigned int iEncryptionSystem;                                    /*!< @brief (optional) the encryption ID or CaID of this channel */
     char         strIconPath[PVR_ADDON_URL_STRING_LENGTH];             /*!< @brief (optional) path to the channel icon (if present) */
     bool         bIsHidden;                                            /*!< @brief (optional) true if this channel is marked as hidden */
+    bool         bHasArchive;                                          /*!< @brief (optional) true if this channel has a server-side back buffer */
   } ATTRIBUTE_PACKED PVR_CHANNEL;
 
   typedef struct PVR_CHANNEL_GROUP
diff --git a/xbmc/guilib/guiinfo/GUIInfoLabels.h b/xbmc/guilib/guiinfo/GUIInfoLabels.h
index f92c63d56d..42ea9d8221 100644
--- a/xbmc/guilib/guiinfo/GUIInfoLabels.h
+++ b/xbmc/guilib/guiinfo/GUIInfoLabels.h
@@ -866,6 +866,8 @@
 #define LISTITEM_EXPIRATION_TIME    (LISTITEM_START + 181)
 #define LISTITEM_PROPERTY           (LISTITEM_START + 182)
 #define LISTITEM_EPG_EVENT_ICON     (LISTITEM_START + 183)
+#define LISTITEM_HASARCHIVE         (LISTITEM_START + 184)
+#define LISTITEM_ISPLAYABLE         (LISTITEM_START + 185)
 
 #define LISTITEM_END                (LISTITEM_START + 2500)
 
diff --git a/xbmc/interfaces/json-rpc/schema/types.json b/xbmc/interfaces/json-rpc/schema/types.json
index d8afcfebf7..68d4a8f93a 100644
--- a/xbmc/interfaces/json-rpc/schema/types.json
+++ b/xbmc/interfaces/json-rpc/schema/types.json
@@ -954,7 +954,7 @@
                 "firstaired", "hastimer", "isactive", "parentalrating",
                 "wasactive", "thumbnail", "rating", "originaltitle", "cast",
                 "director", "writer", "year", "imdbnumber", "hastimerrule",
-                "hasrecording", "recording", "isseries" ]
+                "hasrecording", "recording", "isseries", "isplayable" ]
     }
   },
   "PVR.Details.Broadcast": {
@@ -989,7 +989,8 @@
       "hastimerrule": { "type": "boolean" },
       "hasrecording": { "type": "boolean" },
       "recording": { "type": "string" },
-      "isseries": { "type": "boolean" }
+      "isseries": { "type": "boolean" },
+      "isplayable": { "type": "boolean" }
     }
   },
   "PVR.Fields.Channel": {
@@ -997,7 +998,7 @@
     "items": { "type": "string",
       "enum": [ "thumbnail", "channeltype", "hidden", "locked", "channel", "lastplayed",
                 "broadcastnow", "broadcastnext", "uniqueid", "icon", "channelnumber",
-                "subchannelnumber", "isrecording" ]
+                "subchannelnumber", "isrecording", "hasarchive" ]
     }
   },
   "PVR.Details.Channel": {
@@ -1016,7 +1017,8 @@
       "icon": { "type": "string" },
       "channelnumber": { "type": "integer" },
       "subchannelnumber": { "type": "integer" },
-      "isrecording": { "type": "boolean" }
+      "isrecording": { "type": "boolean" },
+      "hasarchive": { "type": "boolean" }
     }
   },
   "PVR.Details.ChannelGroup": {
diff --git a/xbmc/interfaces/json-rpc/schema/version.txt b/xbmc/interfaces/json-rpc/schema/version.txt
index 501d3e2821..37a0087faa 100644
--- a/xbmc/interfaces/json-rpc/schema/version.txt
+++ b/xbmc/interfaces/json-rpc/schema/version.txt
@@ -1 +1 @@
-JSONRPC_VERSION 9.7.2
+JSONRPC_VERSION 9.8.0
diff --git a/xbmc/pvr/PVRGUIInfo.cpp b/xbmc/pvr/PVRGUIInfo.cpp
index 708f943eaf..ebe31011b2 100644
--- a/xbmc/pvr/PVRGUIInfo.cpp
+++ b/xbmc/pvr/PVRGUIInfo.cpp
@@ -1061,6 +1061,20 @@ bool CPVRGUIInfo::GetListItemAndPlayerBool(const CFileItem *item, const CGUIInfo
 {
   switch (info.m_info)
   {
+    case LISTITEM_HASARCHIVE:
+      if (item->IsPVRChannel())
+      {
+        bValue = item->GetPVRChannelInfoTag()->HasArchive();
+        return true;
+      }
+      break;
+    case LISTITEM_ISPLAYABLE:
+      if (item->IsEPG())
+      {
+        bValue = item->GetEPGInfoTag()->IsPlayable();
+        return true;
+      }
+      break;
     case LISTITEM_ISRECORDING:
       if (item->IsPVRChannel())
       {
diff --git a/xbmc/pvr/channels/PVRChannel.cpp b/xbmc/pvr/channels/PVRChannel.cpp
index 143736f3dd..f52d2e41bc 100644
--- a/xbmc/pvr/channels/PVRChannel.cpp
+++ b/xbmc/pvr/channels/PVRChannel.cpp
@@ -47,6 +47,7 @@ CPVRChannel::CPVRChannel(bool bRadio /* = false */)
   m_bIsLocked               = false;
   m_iLastWatched            = 0;
   m_bChanged                = false;
+  m_bHasArchive             = false;
 
   m_iEpgId                  = -1;
   m_bEPGCreated             = false;
@@ -81,6 +82,7 @@ CPVRChannel::CPVRChannel(const PVR_CHANNEL &channel, unsigned int iClientId)
   m_iEpgId                  = -1;
   m_bEPGCreated             = false;
   m_bChanged                = false;
+  m_bHasArchive             = channel.bHasArchive;
 
   if (m_strChannelName.empty())
     m_strChannelName = StringUtils::Format("%s %d", g_localizeStrings.Get(19029).c_str(), m_iUniqueId);
@@ -116,6 +118,7 @@ void CPVRChannel::Serialize(CVariant& value) const
     epg->Serialize(value["broadcastnext"]);
 
   value["isrecording"] = IsRecording();
+  value["hasarchive"] = m_bHasArchive;
 }
 
 /********** XBMC related channel methods **********/
@@ -183,12 +186,14 @@ bool CPVRChannel::UpdateFromClient(const CPVRChannelPtr &channel)
   if (m_clientChannelNumber     != channel->m_clientChannelNumber ||
       m_strInputFormat          != channel->InputFormat() ||
       m_iClientEncryptionSystem != channel->EncryptionSystem() ||
-      m_strClientChannelName    != channel->ClientChannelName())
+      m_strClientChannelName    != channel->ClientChannelName() ||
+      m_bHasArchive             != channel->HasArchive())
   {
     m_clientChannelNumber     = channel->m_clientChannelNumber;
     m_strInputFormat          = channel->InputFormat();
     m_iClientEncryptionSystem = channel->EncryptionSystem();
     m_strClientChannelName    = channel->ClientChannelName();
+    m_bHasArchive             = channel->HasArchive();
 
     UpdateEncryptionName();
     SetChanged();
@@ -300,6 +305,12 @@ bool CPVRChannel::HasRecording(void) const
   return epgTag && epgTag->HasRecording();
 }
 
+bool CPVRChannel::HasArchive(void) const
+{
+  CSingleLock lock(m_critSection);
+  return m_bHasArchive;
+}
+
 bool CPVRChannel::SetIconPath(const std::string &strIconPath, bool bIsUserSetIcon /* = false */)
 {
   CSingleLock lock(m_critSection);
diff --git a/xbmc/pvr/channels/PVRChannel.h b/xbmc/pvr/channels/PVRChannel.h
index 7df674ad26..a1614d1c40 100644
--- a/xbmc/pvr/channels/PVRChannel.h
+++ b/xbmc/pvr/channels/PVRChannel.h
@@ -153,6 +153,11 @@ namespace PVR
      */
     bool HasRecording(void) const;
 
+    /*!
+     * @return True if this channel has a server-side back buffer, false otherwise
+     */
+    bool HasArchive(void) const;
+
     /*!
      * @return The path to the icon for this channel.
      */
@@ -443,7 +448,8 @@ namespace PVR
     std::string      m_strChannelName;          /*!< the name for this channel used by XBMC */
     time_t           m_iLastWatched;            /*!< last time channel has been watched */
     bool             m_bChanged;                /*!< true if anything in this entry was changed that needs to be persisted */
-    CPVRChannelNumber m_channelNumber;         /*!< the number this channel has in the currently selected channel group */
+    CPVRChannelNumber m_channelNumber;          /*!< the number this channel has in the currently selected channel group */
+    bool             m_bHasArchive;             /*!< true if this channel supports archive */
     //@}
 
     /*! @name EPG related channel data
-- 
2.17.0.windows.1

