From 50c49fe8cdb9b236d27ec2b1d3195ca5121d9677 Mon Sep 17 00:00:00 2001
From: Jonas Karlman <jonas@kwiboo.se>
Date: Sat, 15 Sep 2018 11:24:28 +0200
Subject: [PATCH] [m2vd]: export aspect ratio information

---
 inc/mpp_frame.h                 | 10 ++++++++++
 mpp/base/inc/mpp_frame_impl.h   |  1 +
 mpp/base/mpp_frame.cpp          |  1 +
 mpp/codec/dec/m2v/m2vd_parser.c | 22 ++++++++++++++++++++++
 4 files changed, 34 insertions(+)

diff --git a/inc/mpp_frame.h b/inc/mpp_frame.h
index 6c1b7f1d..87513a09 100644
--- a/inc/mpp_frame.h
+++ b/inc/mpp_frame.h
@@ -190,6 +190,14 @@ typedef enum {
     MPP_FMT_BUTT            = MPP_FMT_COMPLEX_BUTT,
 } MppFrameFormat;
 
+/**
+ * Rational number (pair of numerator and denominator).
+ */
+typedef struct MppFrameRational {
+    RK_S32 num; ///< Numerator
+    RK_S32 den; ///< Denominator
+} MppFrameRational;
+
 typedef enum {
     MPP_FRAME_ERR_UNKNOW           = 0x0001,
     MPP_FRAME_ERR_UNSUPPORT        = 0x0002,
@@ -263,6 +271,8 @@ void    mpp_frame_set_chroma_location(MppFrame frame, MppFrameChromaLocation chr
 MppFrameFormat mpp_frame_get_fmt(MppFrame frame);
 void    mpp_frame_set_fmt(MppFrame frame, MppFrameFormat fmt);
 
+MppFrameRational mpp_frame_get_sar(const MppFrame frame);
+void    mpp_frame_set_sar(MppFrame frame, MppFrameRational sar);
 
 /*
  * HDR parameter
diff --git a/mpp/base/inc/mpp_frame_impl.h b/mpp/base/inc/mpp_frame_impl.h
index 44edc184..1f13d553 100644
--- a/mpp/base/inc/mpp_frame_impl.h
+++ b/mpp/base/inc/mpp_frame_impl.h
@@ -87,6 +87,7 @@ struct MppFrameImpl_t {
     MppFrameChromaLocation chroma_location;
 
     MppFrameFormat fmt;
+    MppFrameRational sar;
     /*
      * buffer information
      * NOTE: buf_size only access internally
diff --git a/mpp/base/mpp_frame.cpp b/mpp/base/mpp_frame.cpp
index cc83b6b3..984efa62 100644
--- a/mpp/base/mpp_frame.cpp
+++ b/mpp/base/mpp_frame.cpp
@@ -184,5 +184,6 @@ MPP_FRAME_ACCESSORS(MppFrameColorTransferCharacteristic, color_trc)
 MPP_FRAME_ACCESSORS(MppFrameColorSpace, colorspace)
 MPP_FRAME_ACCESSORS(MppFrameChromaLocation, chroma_location)
 MPP_FRAME_ACCESSORS(MppFrameFormat, fmt)
+MPP_FRAME_ACCESSORS(MppFrameRational, sar)
 MPP_FRAME_ACCESSORS(size_t, buf_size)
 MPP_FRAME_ACCESSORS(RK_U32, errinfo)
diff --git a/mpp/codec/dec/m2v/m2vd_parser.c b/mpp/codec/dec/m2v/m2vd_parser.c
index 24372f85..e44e35fb 100755
--- a/mpp/codec/dec/m2v/m2vd_parser.c
+++ b/mpp/codec/dec/m2v/m2vd_parser.c
@@ -82,6 +82,25 @@ static int frame_period_Table[16] = {
     1
 };
 
+static const MppFrameRational mpeg2_aspect[16] = {
+    {0,1},
+    {1,1},
+    {4,3},
+    {16,9},
+    {221,100},
+    {0,1},
+    {0,1},
+    {0,1},
+    {0,1},
+    {0,1},
+    {0,1},
+    {0,1},
+    {0,1},
+    {0,1},
+    {0,1},
+    {0,1},
+};
+
 static inline RK_S32 m2vd_get_readbits(BitReadCtx_t *bx)
 {
     return bx->used_bits;
@@ -1164,6 +1183,9 @@ static MPP_RET m2vd_alloc_frame(M2VDParserContext *ctx)
             }
             mpp_frame_set_mode(ctx->frame_cur->f, frametype);
 
+            if (ctx->seq_head.aspect_ratio_information >= 0 && ctx->seq_head.aspect_ratio_information < 16)
+                mpp_frame_set_sar(ctx->frame_cur->f, mpeg2_aspect[ctx->seq_head.aspect_ratio_information]);
+
             mpp_buf_slot_get_unused(ctx->frame_slots, &ctx->frame_cur->slot_index);
             mpp_buf_slot_set_prop(ctx->frame_slots, ctx->frame_cur->slot_index, SLOT_FRAME, ctx->frame_cur->f);
             mpp_buf_slot_set_flag(ctx->frame_slots, ctx->frame_cur->slot_index, SLOT_CODEC_USE);
