From c4068865306726939489b961fd8e04f9a2a7b1ce Mon Sep 17 00:00:00 2001
From: Kamil Trzcinski <ayufan@ayufan.eu>
Date: Sat, 19 Aug 2017 20:38:50 +0200
Subject: [PATCH] rk3328-evb: get ethaddr from efuse

---
 board/rockchip/evb_rk3328/evb-rk3328.c | 49 ++++++++++++++++++++++++++
 1 file changed, 49 insertions(+)

diff --git a/board/rockchip/evb_rk3328/evb-rk3328.c b/board/rockchip/evb_rk3328/evb-rk3328.c
index c8e7a3ad64..8829f50327 100644
--- a/board/rockchip/evb_rk3328/evb-rk3328.c
+++ b/board/rockchip/evb_rk3328/evb-rk3328.c
@@ -3,3 +3,52 @@
  *
  * SPDX-License-Identifier:     GPL-2.0+
  */
+
+#include <common.h>
+#include <u-boot/sha256.h>
+
+static void setup_macaddr(void)
+{
+#if CONFIG_IS_ENABLED(CMD_NET)
+	int ret;
+	const char *cpuid = env_get("cpuid#");
+	u8 hash[SHA256_SUM_LEN];
+	int size = sizeof(hash);
+	u8 mac_addr[6];
+
+	/* Only generate a MAC address, if none is set in the environment */
+	if (env_get("ethaddr"))
+		return;
+
+	if (!cpuid) {
+		debug("%s: could not retrieve 'cpuid#'\n", __func__);
+		return;
+	}
+
+	ret = hash_block("sha256", (void *)cpuid, strlen(cpuid), hash, &size);
+	if (ret) {
+		debug("%s: failed to calculate SHA256\n", __func__);
+		return;
+	}
+
+	/* Copy 6 bytes of the hash to base the MAC address on */
+	memcpy(mac_addr, hash, 6);
+
+	/* Make this a valid MAC address and set it */
+	mac_addr[0] &= 0xfe;  /* clear multicast bit */
+	mac_addr[0] |= 0x02;  /* set local assignment bit (IEEE802) */
+	eth_env_set_enetaddr("ethaddr", mac_addr);
+
+	/* Make a valid MAC address for eth1 */
+	mac_addr[5] += 0x20;
+	mac_addr[5] &= 0xff;
+	eth_env_set_enetaddr("eth1addr", mac_addr);
+#endif
+}
+
+int rk_board_late_init(void)
+{
+	setup_macaddr();
+
+	return 0;
+}
