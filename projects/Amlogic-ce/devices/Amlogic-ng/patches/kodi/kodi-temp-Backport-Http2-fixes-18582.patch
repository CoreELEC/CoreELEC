From c84d985bc0a45bb8fadf41089b10ceb33a638fad Mon Sep 17 00:00:00 2001
From: arnova <arnova@void.org>
Date: Wed, 11 Sep 2019 08:35:16 +0200
Subject: [PATCH 1/2] added: as.xml option to disable Curl HTTP2

---
 xbmc/filesystem/CurlFile.cpp       | 8 +++++---
 xbmc/settings/AdvancedSettings.cpp | 4 +++-
 xbmc/settings/AdvancedSettings.h   | 1 +
 3 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/xbmc/filesystem/CurlFile.cpp b/xbmc/filesystem/CurlFile.cpp
index cb2c9d145cbf..b673491a591a 100644
--- a/xbmc/filesystem/CurlFile.cpp
+++ b/xbmc/filesystem/CurlFile.cpp
@@ -631,9 +631,11 @@ void CCurlFile::SetCommonOptions(CReadState* state, bool failOnError /* = true *
   if (!m_cipherlist.empty())
     g_curlInterface.easy_setopt(h, CURLOPT_SSL_CIPHER_LIST, m_cipherlist.c_str());
 
-  // enable HTTP2 support. default: CURL_HTTP_VERSION_1_1. Curl >= 7.62.0 defaults to CURL_HTTP_VERSION_2TLS
-  g_curlInterface.easy_setopt(h, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_2_0);
-
+  if (CServiceBroker::GetSettingsComponent()->GetAdvancedSettings()->m_curlDisableHTTP2)
+    g_curlInterface.easy_setopt(h, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_1);
+  else
+    // enable HTTP2 support. default: CURL_HTTP_VERSION_1_1. Curl >= 7.62.0 defaults to CURL_HTTP_VERSION_2TLS
+    g_curlInterface.easy_setopt(h, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_2_0);
 }
 
 void CCurlFile::SetRequestHeaders(CReadState* state)
diff --git a/xbmc/settings/AdvancedSettings.cpp b/xbmc/settings/AdvancedSettings.cpp
index 59efd8e95915..e06bee87cb36 100644
--- a/xbmc/settings/AdvancedSettings.cpp
+++ b/xbmc/settings/AdvancedSettings.cpp
@@ -367,6 +367,7 @@ void CAdvancedSettings::Initialize()
   m_curlretries = 2;
   m_curlDisableIPV6 = false;      //Certain hardware/OS combinations have trouble
                                   //with ipv6.
+  m_curlDisableHTTP2 = false;
 
 #if defined(TARGET_DARWIN_IOS)
   m_startFullScreen = true;
@@ -855,7 +856,8 @@ void CAdvancedSettings::ParseSettingsFile(const std::string &file)
     XMLUtils::GetInt(pElement, "curlclienttimeout", m_curlconnecttimeout, 1, 1000);
     XMLUtils::GetInt(pElement, "curllowspeedtime", m_curllowspeedtime, 1, 1000);
     XMLUtils::GetInt(pElement, "curlretries", m_curlretries, 0, 10);
-    XMLUtils::GetBoolean(pElement,"disableipv6", m_curlDisableIPV6);
+    XMLUtils::GetBoolean(pElement, "disableipv6", m_curlDisableIPV6);
+    XMLUtils::GetBoolean(pElement, "disablehttp2", m_curlDisableHTTP2);
   }
 
   pElement = pRootElement->FirstChildElement("cache");
diff --git a/xbmc/settings/AdvancedSettings.h b/xbmc/settings/AdvancedSettings.h
index 1de3b00b276d..d4d020df6744 100644
--- a/xbmc/settings/AdvancedSettings.h
+++ b/xbmc/settings/AdvancedSettings.h
@@ -299,6 +299,7 @@ class CAdvancedSettings : public ISettingCallback, public ISettingsHandler
     int m_curllowspeedtime;
     int m_curlretries;
     bool m_curlDisableIPV6;
+    bool m_curlDisableHTTP2;
 
     bool m_fullScreen;
     bool m_startFullScreen;

From dbb8efc70359cdd00ffec19c8d029925395165fe Mon Sep 17 00:00:00 2001
From: wsnipex <wsnipex@a1.net>
Date: Fri, 16 Oct 2020 08:39:08 +0200
Subject: [PATCH 2/2] [curl] only use HTTP2 with SSL

Cloudflare decided in it's infinite wisdom not to follow standards
that allow HTTP2 requests without encryption.
---
 xbmc/filesystem/CurlFile.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/filesystem/CurlFile.cpp b/xbmc/filesystem/CurlFile.cpp
index b673491a591a..ec830a73ae35 100644
--- a/xbmc/filesystem/CurlFile.cpp
+++ b/xbmc/filesystem/CurlFile.cpp
@@ -635,7 +635,7 @@ void CCurlFile::SetCommonOptions(CReadState* state, bool failOnError /* = true *
     g_curlInterface.easy_setopt(h, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_1);
   else
     // enable HTTP2 support. default: CURL_HTTP_VERSION_1_1. Curl >= 7.62.0 defaults to CURL_HTTP_VERSION_2TLS
-    g_curlInterface.easy_setopt(h, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_2_0);
+    g_curlInterface.easy_setopt(h, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_2TLS);
 }
 
 void CCurlFile::SetRequestHeaders(CReadState* state)
