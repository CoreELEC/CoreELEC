From 0996abc14470622eece29b66913b082a2eebe5f2 Mon Sep 17 00:00:00 2001
From: Florian Dollinger <dollinger.florian@gmx.de>
Date: Sun, 7 Jan 2018 23:55:52 +0100
Subject: [PATCH] The current L2CAP implementation does not change any options if the
 other side respons with "unknown options", but does if "unaccepted options" is the answer.
 It is up to the implementation to decide on the  effort spent on config negotiations,
 therefore the current implementation is  correct at this point - but many devices
 (like Xbox One S controllers) are not useable this way.
 A workaround for many users therefore is to disable_ertm, since this is often the option
 which is unknown. I would prefer to try it again with altered options instead of globally
 disable ERTM.
 
 In result, I suggest the following patch. It simply adds a new case (L2CAP_CONF_UNKNOWN),
 which does nothing but falling through to L2CAP_CONF_UNACCEPT.

Signed-off-by: Florian Dollinger <dollinger.florian@gmx.de>
---
 net/bluetooth/l2cap_core.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/net/bluetooth/l2cap_core.c b/net/bluetooth/l2cap_core.c
index 43ba91c44..388d53bfd 100644
--- a/net/bluetooth/l2cap_core.c
+++ b/net/bluetooth/l2cap_core.c
@@ -4208,6 +4208,7 @@ static inline int l2cap_config_rsp(struct l2cap_conn *conn,
 		}
 		goto done;
 
+	case L2CAP_CONF_UNKNOWN:
 	case L2CAP_CONF_UNACCEPT:
 		if (chan->num_conf_rsp <= L2CAP_CONF_MAX_CONF_RSP) {
 			char req[64];
-- 
2.15.1
