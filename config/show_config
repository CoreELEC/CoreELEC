show_config() {
  # load graphic configuration
    get_graphicdrivers

  dashes="==========================="
  config_message="$config_message\n $dashes$dashes$dashes"
  config_message="$config_message\n Configuration for $DISTRONAME ($([ "$OFFICIAL" = "yes" ] && echo "official" || echo "community"))"
  config_message="$config_message\n $dashes$dashes$dashes"

  # Build options

  config_message="$config_message\n\n Buildoptions:"
  config_message="$config_message\n $dashes$dashes"

  config_message="$config_message\n - CPU (ARCH):\t\t\t\t $TARGET_CPU ($TARGET_ARCH)"
  config_message="$config_message\n - FLOAT:\t\t\t\t $TARGET_FLOAT"
  config_message="$config_message\n - FPU:\t\t\t\t\t $TARGET_FPU"
  config_message="$config_message\n - CPU features:\t\t\t $TARGET_FEATURES"
  config_message="$config_message\n - LTO (Link Time Optimization) support: $LTO_SUPPORT"
  config_message="$config_message\n - GOLD (Google Linker) Support:\t $GOLD_SUPPORT"
  config_message="$config_message\n - LLVM support:\t\t\t $LLVM_SUPPORT"
  config_message="$config_message\n - DEBUG:\t\t\t\t ${DEBUG:-no}"

  # config_message="$config_message\n - CFLAGS:\t $TARGET_CFLAGS"
  # config_message="$config_message\n - LDFLAGS:\t $TARGET_LDFLAGS"

  # Graphic configuration

  config_message="$config_message\n\n Graphic configuration:"
  config_message="$config_message\n $dashes$dashes"

  if [ "$DISPLAYSERVER" = "x11" ] ; then
    config_message="$config_message\n - Xorg Graphic Drivers:\t\t $GRAPHIC_DRIVERS"
    config_message="$config_message\n - XORG Composite support:\t\t $COMPOSITE_SUPPORT"
    config_message="$config_message\n - WindowManager:\t\t\t $WINDOWMANAGER"
  fi
  config_message="$config_message\n - OpenGL (GLX) support (provider):\t $OPENGL_SUPPORT ($OPENGL)"
  config_message="$config_message\n - OpenGLES support (provider):\t\t $OPENGLES_SUPPORT ($OPENGLES)"
  config_message="$config_message\n - uvesafb support:\t\t\t $UVESAFB_SUPPORT"

  # Hardware decoder support

  config_message="$config_message\n\n Hardware decoder configuration:"
  config_message="$config_message\n $dashes$dashes"

  config_message="$config_message\n - Kodi Player driver:\t\t\t $KODIPLAYER_DRIVER"
  config_message="$config_message\n - VAAPI Support:\t\t\t $VAAPI_SUPPORT"
  config_message="$config_message\n - VDPAU Support:\t\t\t $VDPAU_SUPPORT"

  # Input device configuration

  config_message="$config_message\n\n Input device configuration:"
  config_message="$config_message\n $dashes$dashes"

  config_message="$config_message\n - Remote support:\t\t\t $REMOTE_SUPPORT"
  config_message="$config_message\n - ATV Remote support:\t\t\t $ATVCLIENT_SUPPORT"
  config_message="$config_message\n - CEC Adapter support:\t\t\t $CEC_SUPPORT"
  config_message="$config_message\n - CEC Framework support:\t\t $CEC_FRAMEWORK_SUPPORT"
  config_message="$config_message\n - Kodi Joystick support:\t\t $JOYSTICK_SUPPORT"

  # Misc. hardware configuration

  config_message="$config_message\n\n Misc. hardware configuration:"
  config_message="$config_message\n $dashes$dashes"

  config_message="$config_message\n - ALSA support:\t\t\t $ALSA_SUPPORT"
  config_message="$config_message\n - Pulseaudio support:\t\t\t $PULSEAUDIO_SUPPORT"
  config_message="$config_message\n - Bluetooth support:\t\t\t $BLUETOOTH_SUPPORT"

  for config_driver in $ADDITIONAL_DRIVERS; do
    config_message="$config_message\n - Include driver:\t\t\t $config_driver"
  done

  if [ "$DRIVER_ADDONS_SUPPORT" = "yes" ]; then
    for config_driver_addons in $DRIVER_ADDONS; do
      config_message="$config_message\n - Include driver add-ons:\t\t $config_driver_addons"
    done
  fi

  for config_firmware in $FIRMWARE; do
    config_message="$config_message\n - Include firmware:\t\t\t $config_firmware"
  done

  for config_modules in $INITRAMFS_MODULES; do
    config_message="$config_message\n - Initramfs modules:\t\t\t $config_modules"
  done

  # Network service configuration

  config_message="$config_message\n\n Network service configuration:"
  config_message="$config_message\n $dashes$dashes"

  config_message="$config_message\n - Avahi (Zeroconf) support:\t\t $AVAHI_DAEMON"
  config_message="$config_message\n - NFS mounting support:\t\t $NFS_SUPPORT"
  config_message="$config_message\n - SAMBA mounting support:\t\t $SAMBA_SUPPORT"
  config_message="$config_message\n - SAMBA server support:\t\t $SAMBA_SERVER"
  config_message="$config_message\n - SFTP server support:\t\t\t $SFTP_SERVER"
  config_message="$config_message\n - OpenVPN support:\t\t\t $OPENVPN_SUPPORT"

  # OS configuration

  config_message="$config_message\n\n OS configuration:"
  config_message="$config_message\n $dashes$dashes"

  config_message="$config_message\n - OEM Support:\t\t\t\t $OEM_SUPPORT"
  config_message="$config_message\n - Default ROOT Password:\t\t $ROOT_PASSWORD"
  config_message="$config_message\n - Bootloader:\t\t\t\t $BOOTLOADER"
  if [ "$BOOTLOADER" = "u-boot" ]; then
    config_message="$config_message\n   - U-Boot configuration:\t\t $UBOOT_CONFIG"
    config_message="$config_message\n   - U-Boot config file:\t\t $UBOOT_CONFIGFILE"
  fi
  config_message="$config_message\n - UDevil support:\t\t\t $UDEVIL"
  config_message="$config_message\n - Installer support:\t\t\t $INSTALLER_SUPPORT"
  for config_package in $ADDITIONAL_PACKAGES; do
    config_message="$config_message\n - Include package:\t\t\t $config_package"
  done

  # Misc. Filesystems

  config_message="$config_message\n\n Misc. Filesystems:"
  config_message="$config_message\n $dashes$dashes"

  config_message="$config_message\n - Swap Support:\t\t\t $SWAP_SUPPORT"
  if [ "$SWAP_SUPPORT" = "yes" ]; then
    config_message="$config_message\n   - Swapfile default size:\t\t $SWAPFILESIZE"
  fi
  config_message="$config_message\n - exFAT Support (via Fuse):\t\t $EXFAT"
  config_message="$config_message\n - NTFS Support (via Fuse):\t\t $NTFS3G"
  config_message="$config_message\n - Install HFS Tools:\t\t\t $HFSTOOLS"

  # Kodi configuration
  if [ ! "$MEDIACENTER" = "no" ]; then
    config_message="$config_message\n\n Kodi configuration:"
    config_message="$config_message\n $dashes$dashes"

    config_message="$config_message\n - Kodi version:\t\t\t $MEDIACENTER"
    config_message="$config_message\n - Kodi Blu-Ray support:\t\t $KODI_BLURAY_SUPPORT"
    if [ "$KODI_BLURAY_SUPPORT" = "yes" ] ; then
      config_message="$config_message\n   - Bluray BD+ support:\t\t $BLURAY_BDPLUS_SUPPORT"
      config_message="$config_message\n   - Bluray AACS support:\t\t $BLURAY_AACS_SUPPORT"
    fi
    config_message="$config_message\n - Kodi DVDCSS support:\t\t\t $KODI_DVDCSS_SUPPORT"
    config_message="$config_message\n - Kodi Airplay support:\t\t $KODI_AIRPLAY_SUPPORT"
    config_message="$config_message\n - Kodi Airtunes support:\t\t $KODI_AIRTUNES_SUPPORT"
    config_message="$config_message\n - Kodi NFS support:\t\t\t $KODI_NFS_SUPPORT"
    config_message="$config_message\n - Kodi MySQL support:\t\t\t $KODI_MYSQL_SUPPORT"
    config_message="$config_message\n - Kodi Optical Drive support:\t\t $KODI_OPTICAL_SUPPORT"
    config_message="$config_message\n - Kodi SAMBA client support:\t\t $KODI_SAMBA_SUPPORT"
    config_message="$config_message\n - Kodi UPNP support:\t\t\t $KODI_UPNP_SUPPORT"
    config_message="$config_message\n - Kodi Webserver support:\t\t $KODI_WEBSERVER_SUPPORT"

    for config_skin in $SKINS; do
      config_message="$config_message\n - Include Skin:\t\t\t $config_skin"
    done

    config_message="$config_message\n - Default Skin:\t\t\t $SKIN_DEFAULT"
    config_message="$config_message\n - Include extra fonts:\t\t\t $KODI_EXTRA_FONTS"
  fi

  if [ "$(type -t show_distro_config)" = "function" ]; then
    show_distro_config
  fi

  config_message="$config_message\n"
  config_message="$config_message\n $dashes$dashes$dashes"
  config_message="$config_message\n End Configuration for $DISTRONAME"
  config_message="$config_message\n $dashes$dashes$dashes"
  config_message="$config_message\n\n\n"

  echo -e "$config_message"
}
